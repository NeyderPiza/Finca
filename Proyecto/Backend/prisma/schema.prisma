generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                       Int                     @id @default(autoincrement())
  nombre                   String                  @db.VarChar(100)
  email                    String                  @unique @db.VarChar(100)
  password_hash            String                  @db.VarChar(255)
  rol                      String                  @default("user") @db.VarChar(20)
  fecha_creacion           DateTime?               @default(now()) @db.Timestamptz(6)
  animales_registrados     Animal[]
  vacunaciones_registradas CalendarioVacunacion[]
  historial_medico         HistorialMedico[]
  produccion_lechera       ProduccionLechera[]
  transacciones            TransaccionFinanciera[]

  @@map("usuarios")
}

model Especie {
  id                        Int                     @id @default(autoincrement())
  nombre                    String                  @unique @db.VarChar(50)
  animales                  Animal[]
  transacciones_financieras TransaccionFinanciera[]
  vacunas_aplicables        Vacuna[]

  @@map("especies")
}

model Animal {
  id                  Int                     @id @default(autoincrement())
  nombre              String?                 @db.VarChar(100)
  numero_etiqueta     String                  @unique @db.VarChar(50)
  especie_id          Int
  fecha_nacimiento    DateTime?               @db.Date
  genealogia_madre_id Int?
  genealogia_padre_id Int?
  estado              String                  @default("activo") @db.VarChar(20)
  fecha_compra        DateTime?               @db.Date
  precio_compra       Decimal?                @db.Decimal(10, 2)
  fecha_venta         DateTime?               @db.Date
  precio_venta        Decimal?                @db.Decimal(10, 2)
  usuario_id          Int?
  fecha_registro      DateTime?               @default(now()) @db.Timestamptz(6)
  especie             Especie                 @relation(fields: [especie_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  madre               Animal?                 @relation("GenealogiaMadre", fields: [genealogia_madre_id], references: [id], onUpdate: NoAction)
  hijos_madre         Animal[]                @relation("GenealogiaMadre")
  padre               Animal?                 @relation("GenealogiaPadre", fields: [genealogia_padre_id], references: [id], onUpdate: NoAction)
  hijos_padre         Animal[]                @relation("GenealogiaPadre")
  registrado_por      Usuario?                @relation(fields: [usuario_id], references: [id], onUpdate: NoAction)
  vacunaciones        CalendarioVacunacion[]
  historial_medico    HistorialMedico[]
  transacciones       TransaccionFinanciera[]

  @@map("animales")
}

model HistorialMedico {
  id             Int       @id @default(autoincrement())
  animal_id      Int
  fecha          DateTime  @db.Date
  descripcion    String
  tratamiento    String?
  costo          Decimal?  @default(0) @db.Decimal(10, 2)
  usuario_id     Int?
  fecha_creacion DateTime? @default(now()) @db.Timestamptz(6)
  animal         Animal    @relation(fields: [animal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  registrado_por Usuario?  @relation(fields: [usuario_id], references: [id], onUpdate: NoAction)

  @@map("historial_medico")
}

model Vacuna {
  id                   Int                    @id @default(autoincrement())
  nombre               String                 @db.VarChar(100)
  descripcion          String?
  especie_aplicable_id Int?
  aplicaciones         CalendarioVacunacion[]
  especie_aplicable    Especie?               @relation(fields: [especie_aplicable_id], references: [id], onUpdate: NoAction)

  @@map("vacunas")
}

model CalendarioVacunacion {
  id               Int       @id @default(autoincrement())
  animal_id        Int
  vacuna_id        Int
  fecha_aplicacion DateTime  @db.Date
  proxima_dosis    DateTime? @db.Date
  estado           String    @default("aplicada") @db.VarChar(20)
  usuario_id       Int?
  fecha_registro   DateTime? @default(now()) @db.Timestamptz(6)
  animal           Animal    @relation(fields: [animal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  registrado_por   Usuario?  @relation(fields: [usuario_id], references: [id], onUpdate: NoAction)
  vacuna           Vacuna    @relation(fields: [vacuna_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("calendario_vacunacion")
}

model ProduccionLechera {
  id                Int       @id @default(autoincrement())
  fecha             DateTime  @db.Date
  litros_producidos Decimal   @db.Decimal(8, 2)
  precio_litro      Decimal   @db.Decimal(8, 2)
  ingreso_total     Decimal?  @default(dbgenerated("(litros_producidos * precio_litro)")) @db.Decimal(10, 2)
  gastos_asociados  Decimal?  @default(0) @db.Decimal(10, 2)
  finca_origen      String?   @db.VarChar(100)
  usuario_id        Int?
  fecha_registro    DateTime? @default(now()) @db.Timestamptz(6)
  registrado_por    Usuario?  @relation(fields: [usuario_id], references: [id], onUpdate: NoAction)

  @@map("produccion_lechera")
}

model TransaccionFinanciera {
  id                     Int       @id @default(autoincrement())
  tipo_transaccion       String    @db.VarChar(20)
  descripcion            String
  monto                  Decimal   @db.Decimal(12, 2)
  fecha                  DateTime  @db.Date
  categoria              String?   @db.VarChar(50)
  animal_relacionado_id  Int?
  especie_relacionada_id Int?
  usuario_id             Int?
  fecha_registro         DateTime? @default(now()) @db.Timestamptz(6)
  animal_relacionado     Animal?   @relation(fields: [animal_relacionado_id], references: [id], onUpdate: NoAction)
  especie_relacionada    Especie?  @relation(fields: [especie_relacionada_id], references: [id], onUpdate: NoAction)
  registrado_por         Usuario?  @relation(fields: [usuario_id], references: [id], onUpdate: NoAction)

  @@map("transacciones_financieras")
}
